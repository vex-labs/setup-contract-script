import type { RpcQueryProvider } from './interfaces';
/**
 * Get the set of public endpoints for the provided network
 * @param network target blockchain network (e.g. `mainnet`)
 */
export declare function getEndpointsByNetwork(network: string): string[];
/**
 * Initialize a failover RPC provider capable of retrying requests against a set of endpoints
 * @param urls RPC endpoint URLs
 */
export declare function createRpcClientWrapper(urls: string[]): RpcQueryProvider;
/**
 * Initialize a failover RPC provider for the given network
 * @param network target blockchain network (e.g. `mainnet`)
 */
export declare function getProviderByNetwork(network: string): RpcQueryProvider;
/**
 * Initialize a failover RPC provider for a set of RPC endpoint URLs
 * @param urls RPC endpoint URLs
 */
export declare function getProviderByEndpoints(...urls: string[]): RpcQueryProvider;
/**
 * Initialize a testnet RPC provider
 */
export declare function getTestnetRpcProvider(): RpcQueryProvider;
/**
 * Initialize a testnet archival RPC provider
 */
export declare function getTestnetRpcArchivalProvider(): RpcQueryProvider;
/**
 * Initialize a mainnet RPC provider
 */
export declare function getMainnetRpcProvider(): RpcQueryProvider;
//# sourceMappingURL=providers.d.ts.map